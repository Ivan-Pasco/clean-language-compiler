// Test asynchronous programming features

function downloadFile(string url) -> string
	// Simulate downloading a file
	print("Downloading: " + url)
	return "File content from " + url

function processData(string data) -> string
	// Simulate data processing
	print("Processing: " + data)
	return "Processed: " + data

function start()
	// Test later assignment with start expression
	print("Starting async operations...")
	
	// Start downloading files asynchronously
	later download1 = start downloadFile("https://example.com/file1.txt")
	later download2 = start downloadFile("https://example.com/file2.txt")
	
	print("Downloads started, continuing other work...")
	
	// Do some other work while downloads are happening
	integer localWork = 42 * 2
	print("Local work result: " + localWork.toString())
	
	// Background processing (fire and forget)
	background print("Background task: cleaning temp files")
	
	// Later we could await the downloads (when await syntax is implemented)
	// string file1 = await download1
	// string file2 = await download2
	
	print("Main function completed") 