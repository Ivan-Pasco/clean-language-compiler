functions:
    // Basic identity function that works with any type
    Any identity(Any value)
        return value
    
    // Function that works with any numeric type
    Any add(Any a, Any b)
        return a + b
    
    // Function that works with any type and returns a string
    string toString(Any value)
        return value.toString()
    
    // Function that works with arrays of any type
    Array<Any> reverse(Array<Any> arr)
        Array<Any> result = Array()
        iterate i in arr.length() - 1 to 0 step -1
            result.push(arr[i])
        return result
    
    // Function that works with any type and returns a boolean
    boolean isNull(Any value)
        return value == null

start()
    // Test identity function
    integer x = 42
    float y = 3.14
    string z = "hello"
    boolean w = true
    
    assert(identity(x) == 42)
    assert(identity(y) == 3.14)
    assert(identity(z) == "hello")
    assert(identity(w) == true)
    
    // Test add function
    assert(add(1, 2) == 3)
    assert(add(1.5, 2.5) == 4.0)
    
    // Test toString function
    assert(toString(42) == "42")
    assert(toString(3.14) == "3.14")
    assert(toString(true) == "true")
    
    // Test reverse function
    Array<integer> numbers = [1, 2, 3, 4, 5]
    Array<integer> reversed = reverse(numbers)
    assert(reversed[0] == 5)
    assert(reversed[1] == 4)
    assert(reversed[2] == 3)
    assert(reversed[3] == 2)
    assert(reversed[4] == 1)
    
    // Test isNull function
    assert(isNull(null) == true)
    assert(isNull(42) == false)
    assert(isNull("hello") == false)
    
    return 0 