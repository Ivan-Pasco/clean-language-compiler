functions:
    // Test generic class with Any type
    start()
        // Test Container class
        Container c1 = Container(42)
        assert(c1.value == 42)
        
        Container c2 = Container(3.14)
        assert(c2.value == 3.14)
        
        Container c3 = Container("hello")
        assert(c3.value == "hello")
        
        Container c4 = Container(true)
        assert(c4.value == true)
        
        // Test Pair class
        Pair p1 = Pair(1, "one")
        assert(p1.first == 1)
        assert(p1.second == "one")
        
        Pair p2 = Pair(3.14, true)
        assert(p2.first == 3.14)
        assert(p2.second == true)
        
        // Test Stack class
        Stack s = Stack()
        s.push(1)
        s.push(2.5)
        s.push("hello")
        s.push(true)
        
        assert(s.pop() == true)
        assert(s.pop() == "hello")
        assert(s.pop() == 2.5)
        assert(s.pop() == 1)
        
        return 0

class Container
    Any value
    
    constructor(Any value)
        this.value = value

class Pair
    Any first
    Any second
    
    constructor(Any first, Any second)
        this.first = first
        this.second = second

class Stack
    Array<Any> items
    
    constructor()
        this.items = Array()
    
    void push(Any item)
        this.items.push(item)
    
    Any pop()
        return this.items.pop() 