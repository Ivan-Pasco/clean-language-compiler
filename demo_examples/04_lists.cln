// List Operations Example
// Demonstrates Clean Language list creation and manipulation

start()
    println "=== List Operations Demo ==="
    
    // Create lists with different types
    list<integer> numbers = [1, 2, 3, 4, 5]
    list<string> fruits = ["apple", "banana", "cherry", "date"]
    list<number> scores = [95.5, 87.2, 92.0, 78.5, 88.9]
    
    // Display original lists
    println "Original numbers list: " + list.join(numbers, ", ")
    println "Original fruits list: " + list.join(fruits, ", ")
    println "Original scores list: " + list.join(scores, ", ")
    println ""
    
    // List length operations
    integer numCount = list.length(numbers)
    integer fruitCount = list.length(fruits)
    println "Numbers list has " + numCount + " elements"
    println "Fruits list has " + fruitCount + " elements"
    println ""
    
    // Access elements by index
    integer firstNumber = list.get(numbers, 0)
    string lastFruit = list.get(fruits, fruitCount - 1)
    println "First number: " + firstNumber
    println "Last fruit: " + lastFruit
    println ""
    
    // Add elements to lists
    list.push(numbers, 6)
    list.push(fruits, "elderberry")
    println "After adding elements:"
    println "Numbers: " + list.join(numbers, ", ")
    println "Fruits: " + list.join(fruits, ", ")
    println ""
    
    // Check if lists contain specific elements
    boolean hasApple = list.contains(fruits, "apple")
    boolean hasOrange = list.contains(fruits, "orange")
    println "Fruits contains 'apple': " + hasApple
    println "Fruits contains 'orange': " + hasOrange
    println ""
    
    // Find index of elements
    integer appleIndex = list.indexOf(fruits, "apple")
    integer bananaIndex = list.indexOf(fruits, "banana")
    println "Index of 'apple': " + appleIndex
    println "Index of 'banana': " + bananaIndex
    println ""
    
    // Create a slice of the numbers list
    list<integer> subset = list.slice(numbers, 1, 4)
    println "Subset of numbers (index 1-3): " + list.join(subset, ", ")
    
    // Reverse a list
    list<string> reversedFruits = list.reverse(fruits)
    println "Reversed fruits: " + list.join(reversedFruits, ", ")
    
    // Empty list check
    list<integer> emptyList = []
    boolean isEmpty = list.isEmpty(emptyList)
    println "Empty list is empty: " + isEmpty